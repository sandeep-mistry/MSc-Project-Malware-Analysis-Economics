import pefile


ALERTS_HEADER = ["LoadLibrary",
        "GetProcAddress",
        "MessageBox",
        "ShellExecute",
        "IsDebuggerPresent",
        "VirtualAlloc",
        "CreateThread",
        "CreateProcess",
        "OpenProcess*",
        "RaiseException",
        "CreateEvent",
        "GetSystemInfo",
        "GetComputerName",
        "SetWindowsHook",
        "WriteProcessMemory",
        "GetTickCount",
        "Sleep",
        "GetDiskFreeSpace",
        "SetThreadContext",
        "CreateRemoteThread",
         "GetVersion",
         "GetProcessHeap",
         "GetUserName",
         "ExitProcess",
         "CorExeMain",
         "WaitForSingleObject",
         "GetStartupInfo",
         "GetKeyboard",
        "SetUnhandledExceptionFilter",
        "HttpSendRequest",
        "HttpQueryInfo"
                 ]


def check_imports(pe):
    ret = []
    ret2 = []
    present_alerts = []
    present_alerts_frequency = []
    if not hasattr(pe, 'DIRECTORY_ENTRY_IMPORT'):
        return ret
    for lib in pe.DIRECTORY_ENTRY_IMPORT:
        for imp in lib.imports:
            ret.append(imp.name)
    for n in ret:
        if n:
            n = n.decode('utf-8')
            if any(map(n.startswith, ALERTS_HEADER)):
                for a in ALERTS_HEADER:
                    if n.startswith(a):
                        # ret2.append(n)
                        ret2.append(n)

    for alert in ALERTS_HEADER:
        for item in ret2:
            if item.startswith(alert):
                present_alerts.append(alert)

    for alert in ALERTS_HEADER:
        if alert in present_alerts:
            present_alerts_frequency.append(present_alerts.count(alert))
        elif alert not in present_alerts:
            present_alerts_frequency.append(0)

    return present_alerts_frequency
